{"version":3,"sources":["Redux/dialogs-reducer.js","Components/Users/users.module.css","assets/images/user.png","assets/images/Bean Eater-1s-200px.svg","Components/Common/Preloader/preloader.module.css","api/api.js","Components/Navbar/navbar.module.css","serviceWorker.js","Components/Navbar/Navbar.jsx","Utils/object-helpers.js","Redux/users-reducer.js","Components/Common/Paginator/Paginator.js","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","hoc/withSuspens.js","App.js","index.js","Components/Common/FormsControls/FormsControls.js","Components/Common/Preloader/Preloader.js","Components/Common/FormsControls/FormsControls.module.css","Components/Common/Paginator/Paginator.module.css","Utils/Validators/validators.js","Components/Header/header.module.css","Redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","NavBar","className","s","nav","item","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFLow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","alt","disabled","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","friends","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspens","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","child","placeholder","validators","component","text","validate","justify","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","setStatus","getUserProfile","postId"],"mappings":"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","file":"static/js/main.4a5233e1.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Artem\"},\r\n        {id: 2, name: \"Vika\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Yana\"},\r\n        {id: 5, name: \"Olga\"},\r\n        {id: 6, name: \"Angelina\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"What the fck, maan?\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Hello?! What a u doing\"},\r\n        {id: 4, message: \"What a u doing\"},\r\n        {id: 5, message: \"Not me\"}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE, newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3aq64\"};","module.exports = __webpack_public_path__ + \"static/media/user.7cc7a630.png\";","module.exports = __webpack_public_path__ + \"static/media/Bean Eater-1s-200px.2e9b3062.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"justify\":\"preloader_justify__1Kio-\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'd664b651-1d4d-4dfc-8e20-6d385698ea30'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe= false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__2miru\",\"item\":\"navbar_item__3qQKc\",\"active\":\"navbar_active__2IAwB\",\"friends\":\"navbar_friends__1rM7X\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport s from './navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: null,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(\r\n                    state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: true},\r\n                    )\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(\r\n                    state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: false},\r\n                )\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.userId\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFLow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(null));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFLow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFLow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={ () => { setPortionNumber(portionNumber - 1) }}> PREV </button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={ cn ({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber) }\r\n                                 key={p}\r\n                                 onClick={ (e) => {\r\n                                    onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                    })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={ () => {setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n        </div>\r\n\r\n};\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto} alt=\"ava\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress === user.id}\r\n                                  onClick={() => {unfollow(user.id)}}\r\n                        >Unfollow</button>\r\n                        : <button disabled={followingInProgress === user.id}\r\n                                  onClick={() => {follow(user.id)}}\r\n                        >Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>(user.location.country)</div>\r\n                    <div>(user.location.city)</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n            />\r\n            <div>\r\n                {users.map(u => <User user={u}\r\n                                      followingInProgress={props.followingInProgress}\r\n                                      key={u.id}\r\n                                      unfollow={props.unfollow}\r\n                                      follow={props.follow}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/ru/c/c3/Aucas_logo.png' alt=''/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: \"password\"})}\r\n            {createField(null, 'rememberMe', null, Input, {type: \"checkbox\"}, \"Remember me\")}\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Pasha\"},\r\n        {id: 2, name: \"Serega\"},\r\n        {id: 3, name: \"Kirill\"}\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../Components/Common/Preloader/Preloader\";\r\n\r\nexport const withSuspens = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./Components/Navbar/Navbar\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport LoginPage from \"./Components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {withSuspens} from \"./hoc/withSuspens\";\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <NavBar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspens(DialogsContainer)}\r\n                    />\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspens(ProfileContainer)}\r\n                    />\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}\r\n                    />\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n};\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps}/></FormControl>)\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps}/></FormControl>)\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               validate={validators}\r\n               name={name}\r\n               component={component}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n);","import preloader from \"../../../assets/images/Bean Eater-1s-200px.svg\";\r\nimport React from \"react\";\r\nimport s from \"./preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={s.justify}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__23lXS\",\"error\":\"FormsControls_error__JxQBR\",\"formSummaryError\":\"FormsControls_formSummaryError__1EzBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__25WWj\",\"pageNumber\":\"Paginator_pageNumber__1OVVx\",\"selectedPage\":\"Paginator_selectedPage__3Rt1i\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3M6po\",\"loginBlock\":\"header_loginBlock__VpfEx\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"HAHAHA\", likesCount: 12},\r\n        {id: 2, message: \"Next time\", likesCount: 3},\r\n        {id: 3, message: \"How a u?\", likesCount: 8},\r\n        {id: 4, message: \"Maaan, this so funny\", likesCount: 1}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.post, likesCount: 0}],\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (post) => ({type: ADD_POST, post});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}