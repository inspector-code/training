{"version":3,"sources":["api/api.js","assets/images/user.png","Redux/dialogs-reducer.js","Components/Users/users.module.css","assets/images/Bean Eater-1s-200px.svg","Components/Common/Preloader/preloader.module.css","Components/Navbar/navbar.module.css","Components/Common/FormsControls/FormsControls.js","serviceWorker.js","Components/Navbar/Navbar.jsx","Utils/object-helpers.js","Redux/users-reducer.js","Components/Common/Paginator/Paginator.js","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","hoc/withSuspens.js","App.js","index.js","Components/Common/Preloader/Preloader.js","Components/Common/FormsControls/FormsControls.module.css","Utils/Validators/validators.js","Components/Common/Paginator/Paginator.module.css","Components/Header/header.module.css","Redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","NavBar","s","nav","item","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFLow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","alt","disabled","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","length","stopSubmit","_error","initialized","appReducer","friends","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspens","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandleErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","justify","preloader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","setStatus","getUserProfile","file","getState","reject","postId"],"mappings":"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","file":"static/js/main.63ea1aba.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'd664b651-1d4d-4dfc-8e20-6d385698ea30'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe= false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.7cc7a630.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Artem\"},\r\n        {id: 2, name: \"Vika\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Yana\"},\r\n        {id: 5, name: \"Olga\"},\r\n        {id: 6, name: \"Angelina\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"What the fck, maan?\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Hello?! What a u doing\"},\r\n        {id: 4, message: \"What a u doing\"},\r\n        {id: 5, message: \"Not me\"}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE, newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3aq64\"};","module.exports = __webpack_public_path__ + \"static/media/Bean Eater-1s-200px.2e9b3062.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"justify\":\"preloader_justify__1Kio-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__2miru\",\"item\":\"navbar_item__3qQKc\",\"active\":\"navbar_active__2IAwB\",\"friends\":\"navbar_friends__1rM7X\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps}/></FormControl>)\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps}/></FormControl>)\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               validate={validators}\r\n               name={name}\r\n               component={component}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport s from './navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: null,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(\r\n                    state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: true},\r\n                    )\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(\r\n                    state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: false},\r\n                )\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.userId\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFLow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(null));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFLow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFLow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={ () => { setPortionNumber(portionNumber - 1) }}> PREV </button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={ cn ({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber) }\r\n                                 key={p}\r\n                                 onClick={ (e) => {\r\n                                    onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                    })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={ () => {setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n        </div>\r\n\r\n};\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto} alt=\"ava\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress === user.id}\r\n                                  onClick={() => {unfollow(user.id)}}\r\n                        >Unfollow</button>\r\n                        : <button disabled={followingInProgress === user.id}\r\n                                  onClick={() => {follow(user.id)}}\r\n                        >Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>(user.location.country)</div>\r\n                    <div>(user.location.city)</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n            />\r\n            <div>\r\n                {users.map(u => <User user={u}\r\n                                      followingInProgress={props.followingInProgress}\r\n                                      key={u.id}\r\n                                      unfollow={props.unfollow}\r\n                                      follow={props.follow}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/ru/c/c3/Aucas_logo.png' alt=''/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: \"password\"})}\r\n            {createField(null, 'rememberMe', null, Input, {type: \"checkbox\"}, \"Remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n            {captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {})}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Pasha\"},\r\n        {id: 2, name: \"Serega\"},\r\n        {id: 3, name: \"Kirill\"}\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../Components/Common/Preloader/Preloader\";\r\n\r\nexport const withSuspens = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./Components/Navbar/Navbar\";\r\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport LoginPage from \"./Components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {withSuspens} from \"./hoc/withSuspens\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    catchAllUnhandleErrors = (reason, promise) => {\r\n        alert(\"Some error occured\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <NavBar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/'\r\n                               render={() => <Redirect to={'/profile'}/>}\r\n                        />\r\n                        <Route path='/dialogs'\r\n                               render={withSuspens(DialogsContainer)}\r\n                        />\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspens(ProfileContainer)}\r\n                        />\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}\r\n                        />\r\n                        <Route path='/login'\r\n                               render={() => <LoginPage/>}\r\n                        />\r\n                        <Route path='*'\r\n                               render={() => <div>404 page is not found</div>}\r\n                        />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n};\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import preloader from \"../../../assets/images/Bean Eater-1s-200px.svg\";\r\nimport React from \"react\";\r\nimport s from \"./preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={s.justify}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__23lXS\",\"error\":\"FormsControls_error__JxQBR\",\"formSummaryError\":\"FormsControls_formSummaryError__1EzBZ\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__25WWj\",\"pageNumber\":\"Paginator_pageNumber__1OVVx\",\"selectedPage\":\"Paginator_selectedPage__3Rt1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3M6po\",\"loginBlock\":\"header_loginBlock__VpfEx\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"HAHAHA\", likesCount: 12},\r\n        {id: 2, message: \"Next time\", likesCount: 3},\r\n        {id: 3, message: \"How a u?\", likesCount: 8},\r\n        {id: 4, message: \"Maaan, this so funny\", likesCount: 1}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.post, likesCount: 0}],\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (post) => ({type: ADD_POST, post});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}