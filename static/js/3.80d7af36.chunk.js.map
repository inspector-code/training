{"version":3,"sources":["../node_modules/redux-form/es/Form.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","UNSAFE_componentWillMount","registerInnerOnSubmit","onSubmit","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","polyfill","withReduxForm","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","className","style","formSummaryError","createField","Input","Textarea","type","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","alt","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","Field","component","name","placeholder","validate","required","MyPosts","postsElements","posts","p","id","postsBlock","post","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.80d7af36.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\npolyfill(Form);\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rh57e\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1LNQT\",\"contact\":\"ProfileInfo_contact__1tqaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jLsj\",\"posts\":\"MyPosts_posts__35tn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__akP9m\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"Введите статус\"}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../Common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>Name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b>\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job: </b>{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt=\"large_photo\"/>\r\n                {isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n            <div><b>Name:</b> {profile.fullName}</div>\r\n            <div><b>About me:</b> {profile.aboutMe}</div>\r\n            <div><b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div><b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"http://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (post) => {\r\n        props.addPost(post.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder='Enter ur post'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (post) => {\r\n            dispatch(addPostActionCreator(post));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}